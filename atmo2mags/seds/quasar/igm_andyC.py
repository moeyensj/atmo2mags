import numpy


pzReal
pzSpec::attenuation(pzReal lam) const {
  if (!gParam.lymanAttenuate) return 1;
  pzReal attenuate;
  float coeff[17] = {0.0036, 0.0017, 0.001185, 0.000941,
                     0.000796, 0.000697,
                     0.0006236, 0.0005665, 0.00052,
                     0.000482, 0.0004487,
                     0.00042, 0.0003947, 0.000372,
                     0.000352, 0.00033336,
                     0.0003165};
  double teff, lamz, xc;
  double lamrest;

  /* work in 1+z */
  z = 1+this->z();
  lamrest = lam / z;
  xc = lam / 912.;

  if (lamrest <= 912.0) {
    teff = 0.25*xc*xc*xc*((pow(z,0.46)) - (pow(xc,0.46))) +
      9.4*(pow(xc,1.5))*((pow(z,0.18)) - (pow(xc,0.18)))
      - 0.7*(xc*xc*xc)*((pow(xc,(-1.32))) - (pow(z,(-1.32))))
      - 0.023*((pow(z,1.68)) - (pow(xc,1.68)))+
      0.0036*(pow((lam/1215.67),3.46))
      + 0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46)) +
      0.00052*(pow((lam/920.963),3.46)) +
      0.0004817*(pow((lam/919.352),3.46)) +
      0.0004487*(pow((lam/918.129),3.46)) +
      0.00042*(pow((lam/917.181),3.46)) +
      0.0003947*(pow((lam/916.429),3.46)) +
      0.000372*(pow((lam/915.824),3.46)) +
      0.000352*(pow((lam/915.329),3.46)) +
      0.00033336*(pow((lam/914.919),3.46)) +
      0.0003165*(pow((lam/914.5760),3.46));
  }
  if ((lamrest > 912.0) && (lamrest <=916.429)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46))
      + 0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46))
      + 0.00052*(pow((lam/920.963),3.46)) +
      0.0004817*(pow((lam/919.352),3.46))
      + 0.0004487*(pow((lam/918.129),3.46)) +
      0.00042*(pow((lam/917.181),3.46))
      + 0.0003947*(pow((lam/916.429),3.46));
  }
  if ((lamrest > 916.429) && (lamrest <= 917.181)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46)) +
      0.00052*(pow((lam/920.963),3.46)) +
      0.0004817*(pow((lam/919.352),3.46)) +
      0.0004487*(pow((lam/918.129),3.46)) +
      0.00042*(pow((lam/917.181),3.46));
  }
  if ((lamrest > 917.181) && (lamrest <= 918.129)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46)) +
      0.00052*(pow((lam/920.963),3.46)) +
      0.0004817*(pow((lam/919.352),3.46)) +
      0.0004487*(pow((lam/918.129),3.46));
  }
  if ((lamrest > 918.129) && (lamrest <= 919.352)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46)) +
      0.00052*(pow((lam/920.963),3.46)) +
      0.0004817*(pow((lam/919.352),3.46));
  }
  if ((lamrest > 919.352) && (lamrest <= 920.963)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46)) +
      0.00052*(pow((lam/920.963),3.46));
  }
  if ((lamrest > 920.963) && (lamrest <= 923.15)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46)) +
      0.0005665*(pow((lam/923.15),3.46));
  }
  if ((lamrest > 923.15) && (lamrest <= 926.226)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46)) +
      0.0006236*(pow((lam/926.226),3.46));
  }
  if ((lamrest > 926.226) && (lamrest <= 930.748)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46)) +
      0.000697*(pow((lam/930.748),3.46));
  }
  if ((lamrest > 930.748) && (lamrest <= 937.803)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46)) +
      0.000796*(pow((lam/937.8030),3.46));
  }

  if ((lamrest > 937.803) && (lamrest <=949.743)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46)) +
      0.000941*(pow((lam/949.743),3.46));
  }

  if ((lamrest > 949.743) && (lamrest <=  972.537)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46)) +
      0.001185*(pow((lam/972.537),3.46));
  }

  if ((lamrest > 972.537) && (lamrest <= 1025.72)) {
    teff = 0.0036*(pow((lam/1215.67),3.46)) +
      0.0017*(pow((lam/1025.72),3.46));
  }
  if ((lamrest > 1025.72) && (lamrest <= 1215.67)) {
    teff = 0.0036*(pow((lam/1215.67),3.46));
  }

  if (lamrest > 1215.7) {
    teff = 0.0;
  }

  attenuate = exp(-teff * gParam.rtau);

  if (attenuate > 1.) {
    attenuate = 1.;
  }

  return attenuate;
}






